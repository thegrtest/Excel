import pandas as pd
import matplotlib.pyplot as plt
import tkinter as tk
from tkinter import filedialog
import string

def excel_col_to_index(letter):
    return string.ascii_uppercase.index(letter.upper())

def load_and_process(sheet_name=0, cell_column='A', start_date='2025-02-21'):
    root = tk.Tk()
    root.withdraw()
    file_path = filedialog.askopenfilename(
        title="Select Excel File",
        filetypes=[("Excel Files", "*.xlsx *.xls")]
    )
    if not file_path:
        print("No file selected.")
        return None

    df = pd.read_excel(file_path, sheet_name=sheet_name)
    column_index = excel_col_to_index(cell_column)
    data_series = df.iloc[:, column_index]

    split_data = data_series.str.extract(
        r'(?P<Date>\d{4}-\d{2}-\d{2}) (?P<Time>\d{2}:\d{2}:\d{2});(?P<PH>[\d.]+);(?P<Temp>[\d.]+)'
    )

    split_data["Datetime"] = pd.to_datetime(split_data["Date"] + " " + split_data["Time"])
    split_data["PH"] = pd.to_numeric(split_data["PH"], errors='coerce')

    # Filter from Feb 21st
    split_data = split_data[split_data["Datetime"] >= pd.to_datetime(start_date)]
    split_data.sort_values("Datetime", inplace=True)
    split_data.dropna(subset=["PH"], inplace=True)

    return split_data

def plot_ph_time_series(data):
    plt.figure(figsize=(12, 6))
    plt.plot(data["Datetime"], data["PH"], marker='o', linestyle='-', markersize=4)
    plt.title("pH Measurements Over Time (from Feb 21st)")
    plt.xlabel("Timestamp")
    plt.ylabel("pH Level")
    plt.grid(True)
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()

if __name__ == "__main__":
    df = load_and_process(cell_column='A', start_date='2025-02-21')
    if df is not None and not df.empty:
        plot_ph_time_series(df)
    else:
        print("No valid pH data found after Feb 21.")
